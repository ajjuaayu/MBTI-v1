// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for simulating a chat with an AI persona based on an MBTI type.
 *
 * - simulateChat - An async function that takes an MBTI type and a message, and returns a simulated response from that type.
 * - SimulateChatInput - The input type for the simulateChat function.
 * - SimulateChatOutput - The output type for the simulateChat function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SimulateChatInputSchema = z.object({
  mbtiType: z
    .string()
    .describe('The MBTI type to simulate (e.g., INFP, ESTJ).'),
  message: z.string().describe('The message to send to the simulated MBTI type.'),
});
export type SimulateChatInput = z.infer<typeof SimulateChatInputSchema>;

const SimulateChatOutputSchema = z.object({
  response: z.string().describe('The simulated response from the MBTI type.'),
});
export type SimulateChatOutput = z.infer<typeof SimulateChatOutputSchema>;

export async function simulateChat(input: SimulateChatInput): Promise<SimulateChatOutput> {
  return simulateChatFlow(input);
}

const simulateChatPrompt = ai.definePrompt({
  name: 'simulateChatPrompt',
  input: {schema: SimulateChatInputSchema},
  output: {schema: SimulateChatOutputSchema},
  prompt: `You are simulating a conversation with a person of the MBTI type {{mbtiType}}.

  Respond to the following message as if you were that person:

  {{message}}

  Remember to stay in character and reflect the typical communication style and perspective of the {{mbtiType}} type.
  Do not mention that you are an AI or simulation.
  Do not include caveats or disclaimers about the accuracy of MBTI types.
  Your response should be relatively short, around 1-3 sentences.
  `,
});

const simulateChatFlow = ai.defineFlow(
  {
    name: 'simulateChatFlow',
    inputSchema: SimulateChatInputSchema,
    outputSchema: SimulateChatOutputSchema,
  },
  async input => {
    const {output} = await simulateChatPrompt(input);
    return output!;
  }
);
